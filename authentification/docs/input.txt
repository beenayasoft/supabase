Conception Détaillée (Blueprint) - Module 1 : Gestion des Utilisateurs et des Rôles
Contexte utilisateur : Le premier utilisateur (l'Administrateur du compte Beenaya) doit pouvoir inviter ses collaborateurs et leur assigner des droits d'accès simplement, sans être un expert en sécurité informatique. La gestion par rôles prédéfinis est la clé de cette simplicité.

1. Spécifications Fonctionnelles Détaillées
Fonctionnalité 1.1 : Invitation et Création d'un Utilisateur
Seuls les utilisateurs avec le rôle "Administrateur" peuvent accéder à la gestion des utilisateurs.
L'administrateur doit pouvoir inviter un nouveau collaborateur en saisissant son Prénom, son Nom et son Email. L'email servira d'identifiant unique de connexion.
Lors de l'invitation, l'administrateur doit assigner au moins un rôle à l'utilisateur via une liste de cases à cocher.
Une fois l'invitation envoyée, l'utilisateur invité reçoit un email contenant un lien unique et à durée limitée (ex: 72h) pour activer son compte.
En cliquant sur le lien, le nouvel utilisateur doit simplement choisir son mot de passe pour finaliser la création de son compte. La politique de mot de passe (longueur minimale, complexité) est définie au niveau de l'application.
Fonctionnalité 1.2 : Gestion de la Liste des Utilisateurs
L'administrateur doit pouvoir visualiser la liste de tous les utilisateurs de son organisation dans un tableau.
Le tableau doit afficher : le Nom complet, l'Email, les Rôles assignés et le Statut ("Actif", "Inactif/Désactivé", "Invitation en attente").
L'administrateur doit pouvoir modifier un utilisateur existant pour changer son nom ou ses rôles. Il ne peut pas modifier l'email.
L'administrateur doit pouvoir désactiver un utilisateur. L'utilisateur désactivé ne peut plus se connecter, mais son compte et tout son historique (actions, documents, etc.) sont conservés dans le système pour la traçabilité. On ne supprime jamais un utilisateur (soft delete).
L'administrateur doit pouvoir réactiver un utilisateur désactivé.
L'administrateur doit pouvoir renvoyer l'invitation si un utilisateur ne l'a pas encore acceptée.
Fonctionnalité 1.3 : Gestion des Rôles et Permissions (pour le MVP)
Beenaya est livré avec 4 rôles non modifiables, conçus pour la PME du BTP cible :
Administrateur : Accès total. Le seul à pouvoir gérer les utilisateurs, les rôles et la configuration de l'entreprise (Module 2).
Gérant : Accès en lecture/écriture à tous les modules fonctionnels (Tiers, Devis, Factures, etc.) et voit toutes les données financières (marges, coûts). Ne peut pas gérer les utilisateurs ni la configuration.
Administratif / Bureau : Accès en lecture/écriture aux modules Tiers, Devis, Facturation. Ne voit pas les données de coût et de marge par défaut.
Opérationnel / Travaux : (Pour le MVP) Accès en lecture seule aux modules Tiers (pour consulter les coordonnées d'un client/fournisseur) et aux Devis acceptés (pour voir le descriptif des travaux vendus, sans les prix).
L'architecture doit être conçue pour permettre, dans une version future, la création de rôles personnalisés et l'édition fine des permissions pour chaque rôle.


Découpage en User Stories - Module 1 : Gestion des Utilisateurs et des Rôles
Epic : Gestion des Accès et Utilisateurs
User Story 1.1 : Inviter un nouveau collaborateur
Titre : [Auth] Inviter un nouveau collaborateur dans l'organisation
Description :
En tant qu' Administrateur,
Je veux pouvoir inviter un nouveau collaborateur en saisissant son nom et son email, et en lui assignant un rôle,
Afin de lui donner accès à la plateforme Beenaya de manière sécurisée.
Critères d'Acceptation :
Un formulaire me permet de saisir le prénom, le nom et l'email de la personne à inviter.
Le formulaire me présente une liste de rôles prédéfinis (Administrateur, Gérant, Administratif/Bureau, Opérationnel/Travaux) sous forme de cases à cocher.
Je dois sélectionner au moins un rôle pour pouvoir envoyer l'invitation.
Après envoi, un email d'invitation avec un lien unique est expédié à l'adresse fournie.
Le nouvel utilisateur apparaît dans la liste des utilisateurs avec le statut "Invitation en attente".


User Story 1.2 : Accepter une invitation et créer son compte
Titre : [Auth] Accepter une invitation et activer son compte
Description :
En tant que nouvel utilisateur invité,
Je veux pouvoir cliquer sur le lien dans mon email d'invitation et définir mon mot de passe,
Afin de finaliser la création de mon compte et pouvoir me connecter à Beenaya.
Critères d'Acceptation :
Le lien d'invitation dans l'email est unique et a une durée de validité (ex: 72h).
En cliquant sur le lien valide, j'arrive sur une page de bienvenue au nom de l'entreprise qui m'invite.
La page me demande de choisir et de confirmer un mot de passe.
La page affiche les exigences de la politique de mot de passe (ex: 8 caractères minimum, une majuscule...).
Après avoir défini mon mot de passe, je suis redirigé vers la page de connexion et mon statut passe à "Actif".
Si le lien a expiré, la page m'informe et me propose de demander à l'administrateur de me renvoyer une invitation.


User Story 1.3 : Se connecter et se déconnecter
Titre : [Auth] Se connecter à son compte
Description :
En tant qu' utilisateur actif,
Je veux pouvoir me connecter à Beenaya en utilisant mon email et mon mot de passe,
**Afin d'**accéder à mon espace de travail.
Critères d'Acceptation :
La page de connexion contient des champs pour l'email et le mot de passe.
Si les identifiants sont corrects, je suis connecté et redirigé vers le tableau de bord principal.
Si les identifiants sont incorrects, un message d'erreur clair s'affiche.
Une fois connecté, une option de "Déconnexion" est disponible (ex: dans un menu sous mon nom/avatar).


User Story 1.4 : Gérer la liste des utilisateurs existants
Titre : [Auth] Gérer les utilisateurs de mon organisation
Description :
En tant qu' Administrateur,
Je veux pouvoir voir la liste de tous les utilisateurs, modifier leurs rôles et désactiver/réactiver leurs comptes,
Afin de maintenir à jour les droits d'accès de mes collaborateurs.
Critères d'Acceptation :
J'ai accès à une page listant tous les utilisateurs de mon organisation.
Pour chaque utilisateur, je peux voir son nom, son email, ses rôles et son statut.
Je peux modifier un utilisateur pour changer les rôles qui lui sont assignés.
Je peux désactiver un utilisateur. Son statut passe à "Inactif" et il ne peut plus se connecter.
Je peux réactiver un utilisateur inactif.
Je ne peux pas modifier mon propre statut ni supprimer mon propre rôle d'Administrateur si je suis le seul.


User Story 1.5 (Tâche Technique) : Mettre en place la structure de la BDD et l'API d'authentification
Titre : [Tech] Créer le schéma de BDD et les endpoints d'API pour l'authentification
Description :
En tant que développeur backend,
Je veux implémenter le modèle de données (users, roles, user_roles) et les endpoints d'API (login, invite, etc.) avec une authentification par token JWT,
Afin de fournir la fondation sécurisée pour la gestion des utilisateurs.
Critères d'Acceptation :
Les tables de la base de données sont créées via un script de migration.
Les 4 rôles par défaut sont insérés dans la table roles.
L'endpoint /login renvoie un token JWT valide en cas de succès.
Les autres endpoints de l'API sont protégés et requièrent un token JWT valide.
Le système de "Guards" pour la gestion des permissions par rôle est en place.



Planification du Sprint pour le Module 1
Ce module est un prérequis pour tous les autres. Le développement se fera probablement dans cet ordre :
Ticket 1.5 (Tâche Tech) : C'est la fondation absolue. Rien ne peut être construit sans la base de données et l'API de base.
Ticket 1.3 (Connexion) : Permet aux développeurs de se connecter pour tester les futures fonctionnalités.
Ticket 1.2 (Accepter l'invitation) : Le workflow de création de compte.
Ticket 1.1 (Inviter) : La porte d'entrée pour les nouveaux utilisateurs.
Ticket 1.4 (Gérer la liste) : La partie administrative.
En un ou deux sprints, votre équipe peut avoir un système d'authentification et de gestion des utilisateurs complet et robuste, prêt à accueillir les autres modules de Beenaya.

Module 1 : Gestion des Utilisateurs et des Rôles
Contexte Utilisateur
Le premier utilisateur (Administrateur du compte Beenaya) doit pouvoir inviter ses collaborateurs et leur attribuer des droits d'accès simplement, sans expertise technique. L'utilisation de rôles prédéfinis simplifie cette gestion.

1. Spécifications Fonctionnelles Détaillées
Fonctionnalité 1.1 : Invitation et Création d’un Utilisateur
Seuls les administrateurs peuvent accéder à la gestion des utilisateurs.

L’administrateur saisit le prénom, nom, email du collaborateur.

L’email est utilisé comme identifiant unique de connexion.

L’administrateur doit sélectionner au moins un rôle via des cases à cocher.

Un email contenant un lien unique et limité dans le temps (ex : 72h) est envoyé.

Le collaborateur clique sur le lien, définit un mot de passe selon la politique de sécurité, et active son compte.

Fonctionnalité 1.2 : Gestion de la Liste des Utilisateurs
L’administrateur visualise la liste des utilisateurs sous forme de tableau :

Nom complet, Email, Rôles assignés, Statut (Actif, Inactif, Invitation en attente).

Il peut :

Modifier les rôles ou le nom (mais pas l’email).

Désactiver un utilisateur (soft delete : données conservées).

Réactiver un utilisateur désactivé.

Renvoyer une invitation non encore acceptée.

Fonctionnalité 1.3 : Gestion des Rôles et Permissions (MVP)
Rôles par défaut (non modifiables) adaptés aux PME BTP :

Administrateur : Accès total. Gère les utilisateurs et la configuration.

Gérant : Lecture/écriture sur tous les modules + accès aux données financières. Ne gère ni utilisateurs ni configuration.

Administratif / Bureau : Lecture/écriture sur Tiers, Devis, Facturation. Pas de visibilité sur les marges.

Opérationnel / Travaux : Lecture seule sur Tiers et Devis acceptés (sans prix).

L’architecture prévoit la prise en charge future de rôles personnalisés et permissions granulaires.

2. Découpage en User Stories
Epic : Gestion des Accès et Utilisateurs
User Story 1.1 – Inviter un nouveau collaborateur
Titre : [Auth] Inviter un nouveau collaborateur dans l’organisation
Description :
En tant qu’administrateur,
Je veux inviter un collaborateur en saisissant ses informations et en lui assignant un rôle,
Afin de lui permettre un accès sécurisé à Beenaya.

Critères d’acceptation :

Formulaire avec prénom, nom, email.

Liste de rôles prédéfinis (cases à cocher).

Sélection d’au moins un rôle requise.

Email avec lien d’invitation envoyé.

L’utilisateur est affiché avec le statut "Invitation en attente".

User Story 1.2 – Accepter une invitation et créer son compte
Titre : [Auth] Accepter une invitation et activer son compte
Description :
En tant qu’utilisateur invité,
Je veux cliquer sur un lien d’invitation et définir mon mot de passe,
Afin d’activer mon compte et accéder à Beenaya.

Critères d’acceptation :

Lien d’invitation unique, valable (ex : 72h).

Page de bienvenue à l’entreprise invitante.

Choix et confirmation d’un mot de passe (avec règles).

Redirection vers la page de connexion.

Changement de statut à "Actif".

En cas d’expiration, message et possibilité de demander une nouvelle invitation.

User Story 1.3 – Se connecter et se déconnecter
Titre : [Auth] Se connecter à son compte
Description :
En tant qu’utilisateur actif,
Je veux me connecter avec mon email et mon mot de passe,
Afin d’accéder à mon espace Beenaya.

Critères d’acceptation :

Formulaire avec email et mot de passe.

Redirection vers le tableau de bord en cas de succès.

Message d’erreur clair en cas d’échec.

Option de déconnexion disponible.

User Story 1.4 – Gérer les utilisateurs existants
Titre : [Auth] Gérer les utilisateurs de mon organisation
Description :
En tant qu’administrateur,
Je veux visualiser et modifier les rôles ou le statut des utilisateurs,
Afin d'assurer la bonne gestion des accès.

Critères d’acceptation :

Page listant les utilisateurs (nom, email, rôles, statut).

Possibilité de modifier les rôles.

Désactivation/réactivation des utilisateurs.

L’administrateur ne peut ni modifier son propre statut ni retirer son propre rôle s’il est le seul admin.

User Story 1.5 – Tâche Technique : Schéma BDD et API d’authentification
Titre : [Tech] Créer le schéma de BDD et les endpoints d’API pour l’authentification
Description :
En tant que développeur backend,
Je veux mettre en place la base de données et les endpoints d’authentification avec tokens JWT,
Afin de sécuriser la gestion des utilisateurs.

Critères d’acceptation :

Tables créées via script de migration.

Insertion des 4 rôles par défaut.

Endpoint /login retournant un token JWT valide.

Endpoints protégés par token.

Système de permissions par rôle via "Guards".





