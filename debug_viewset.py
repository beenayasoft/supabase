#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import django

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'erp_btp.settings')
django.setup()

from rest_framework.test import APIRequestFactory, force_authenticate
from devis.views import QuoteViewSet
from tiers.models import Tiers
from django.contrib.auth import get_user_model

User = get_user_model()

def debug_quote_viewset():
    print("üîç Debugging QuoteViewSet...")
    
    try:
        # R√©cup√©rer un utilisateur et un tier
        user = User.objects.filter(email='admin@beenaya.com').first()
        tier = Tiers.objects.first()
        
        if not user:
            print("‚ùå Utilisateur admin non trouv√©")
            return
        if not tier:
            print("‚ùå Tier non trouv√©")
            return
        
        print(f"‚úÖ Utilisateur: {user.email}")
        print(f"‚úÖ Tier: {tier.nom}")
        
        # Cr√©er une factory pour simuler une requ√™te
        factory = APIRequestFactory()
        
        # Donn√©es pour cr√©er un devis
        quote_data = {
            "tier": str(tier.id),
            "project_name": "Test ViewSet Projet",
            "project_address": "123 Rue ViewSet",
            "validity_period": 30,
        }
        
        print(f"\nüèóÔ∏è Test du ViewSet avec: {quote_data}")
        
        # Cr√©er une requ√™te POST
        request = factory.post('/api/quotes/', quote_data, format='json')
        
        # Authentifier l'utilisateur
        force_authenticate(request, user=user)
        
        # Cr√©er le viewset et ex√©cuter l'action
        view = QuoteViewSet.as_view({'post': 'create'})
        
        print(f"‚úÖ ViewSet cr√©√©, tentative de cr√©ation...")
        
        response = view(request)
        
        print(f"‚úÖ R√©ponse re√ßue: {response.status_code}")
        print(f"   Donn√©es: {response.data}")
        
    except Exception as e:
        print(f"‚ùå Erreur dans le viewset:")
        print(f"   Type: {type(e).__name__}")
        print(f"   Message: {str(e)}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    debug_quote_viewset() 