<<<<<<< HEAD
# Generated by Django 5.1.6 on 2025-06-20 15:36

=======
# Generated by Django 5.2.3 on 2025-06-23 09:19

import django.db.models.deletion
import uuid
from django.conf import settings
>>>>>>> main
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
<<<<<<< HEAD
=======
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
>>>>>>> main
    ]

    operations = [
        migrations.CreateModel(
            name='Tiers',
            fields=[
<<<<<<< HEAD
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
=======
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('entreprise', 'Entreprise'), ('particulier', 'Particulier')], default='entreprise', max_length=20)),
                ('nom', models.CharField(max_length=255, verbose_name='Nom')),
                ('siret', models.CharField(blank=True, max_length=14, null=True, verbose_name='SIRET')),
                ('tva', models.CharField(blank=True, max_length=20, null=True, verbose_name='Numéro TVA')),
                ('relation', models.CharField(choices=[('client', 'Client'), ('prospect', 'Prospect'), ('fournisseur', 'Fournisseur'), ('sous_traitant', 'Sous-traitant')], default='prospect', help_text='Type de relation principale avec ce tier', max_length=20, verbose_name='Relation')),
                ('flags', models.JSONField(blank=True, default=list, help_text='DEPRECATED: Liste des flags: prospect, client, fournisseur, etc. Utiliser le champ "relation" à la place.')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Archivé')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('date_archivage', models.DateTimeField(blank=True, null=True, verbose_name="Date d'archivage")),
                ('assigned_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tiers', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur assigné')),
            ],
            options={
                'verbose_name': 'Tier',
                'verbose_name_plural': 'Tiers',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=100, verbose_name='Nom')),
                ('prenom', models.CharField(blank=True, max_length=100, verbose_name='Prénom')),
                ('fonction', models.CharField(blank=True, max_length=100, verbose_name='Fonction')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('telephone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone')),
                ('contact_principal_devis', models.BooleanField(default=False, verbose_name='Contact principal devis')),
                ('contact_principal_facture', models.BooleanField(default=False, verbose_name='Contact principal facture')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('tier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='tiers.tiers', verbose_name='Tier')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
                'ordering': ['nom', 'prenom'],
            },
        ),
        migrations.CreateModel(
            name='Adresse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(blank=True, max_length=100, verbose_name='Libellé')),
                ('rue', models.CharField(blank=True, max_length=255, verbose_name='Rue')),
                ('ville', models.CharField(blank=True, max_length=100, verbose_name='Ville')),
                ('code_postal', models.CharField(blank=True, max_length=10, verbose_name='Code postal')),
                ('pays', models.CharField(default='France', max_length=100, verbose_name='Pays')),
                ('facturation', models.BooleanField(default=False, verbose_name='Adresse de facturation')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('tier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adresses', to='tiers.tiers', verbose_name='Tier')),
            ],
            options={
                'verbose_name': 'Adresse',
                'verbose_name_plural': 'Adresses',
                'ordering': ['-facturation', 'libelle'],
            },
        ),
        migrations.CreateModel(
            name='ActiviteTiers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('creation', 'Création'), ('modification', 'Modification'), ('appel', 'Appel'), ('email', 'Email'), ('rendez_vous', 'Rendez-vous'), ('devis', 'Devis'), ('facture', 'Facture'), ('autre', 'Autre')], max_length=20, verbose_name="Type d'activité")),
                ('contenu', models.TextField(verbose_name='Contenu')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('utilisateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activites_tiers', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
                ('tier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activites', to='tiers.tiers', verbose_name='Tier')),
            ],
            options={
                'verbose_name': 'Activité Tier',
                'verbose_name_plural': 'Activités Tiers',
                'ordering': ['-date'],
            },
        ),
        migrations.AddIndex(
            model_name='tiers',
            index=models.Index(fields=['type'], name='tiers_tiers_type_6c921c_idx'),
        ),
        migrations.AddIndex(
            model_name='tiers',
            index=models.Index(fields=['relation'], name='tiers_tiers_relatio_9ae797_idx'),
        ),
        migrations.AddIndex(
            model_name='tiers',
            index=models.Index(fields=['flags'], name='tiers_tiers_flags_945978_idx'),
        ),
        migrations.AddIndex(
            model_name='tiers',
            index=models.Index(fields=['assigned_user'], name='tiers_tiers_assigne_57d6d4_idx'),
        ),
        migrations.AddIndex(
            model_name='tiers',
            index=models.Index(fields=['is_deleted'], name='tiers_tiers_is_dele_2167b6_idx'),
        ),
        migrations.AddIndex(
            model_name='tiers',
            index=models.Index(fields=['date_creation'], name='tiers_tiers_date_cr_ca59f9_idx'),
        ),
        migrations.AddIndex(
            model_name='activitetiers',
            index=models.Index(fields=['tier', 'date'], name='tiers_activ_tier_id_0db207_idx'),
        ),
        migrations.AddIndex(
            model_name='activitetiers',
            index=models.Index(fields=['type'], name='tiers_activ_type_201efb_idx'),
        ),
        migrations.AddIndex(
            model_name='activitetiers',
            index=models.Index(fields=['utilisateur'], name='tiers_activ_utilisa_82bedf_idx'),
>>>>>>> main
        ),
    ]
