# Generated by Django 5.2.1 on 2025-06-19 11:11

from django.db import migrations, models


def migrate_flags_to_relation(apps, schema_editor):
    """
    Migre les flags vers le nouveau champ relation selon la priorité :
    client > fournisseur > sous_traitant > prospect
    """
    Tiers = apps.get_model('tiers', 'Tiers')
    
    # Priorités pour la migration
    PRIORITY = {
        'client': 1,
        'fournisseur': 2,
        'sous_traitant': 3,
        'prospect': 4
    }
    
    for tier in Tiers.objects.all():
        flags = tier.flags if tier.flags else []
        
        # Si aucun flag, c'est un prospect par défaut
        if not flags:
            tier.relation = 'prospect'
        else:
            # Trouve le flag avec la plus haute priorité
            valid_flags = [flag for flag in flags if flag in PRIORITY]
            if valid_flags:
                # Trie par priorité et prend le premier (plus haute priorité)
                tier.relation = min(valid_flags, key=lambda x: PRIORITY[x])
            else:
                # Si aucun flag valide, défaut à prospect
                tier.relation = 'prospect'
        
        tier.save()


def reverse_migration(apps, schema_editor):
    """
    Migration inverse : convertit le champ relation vers flags
    """
    Tiers = apps.get_model('tiers', 'Tiers')
    
    for tier in Tiers.objects.all():
        if hasattr(tier, 'relation') and tier.relation:
            tier.flags = [tier.relation]
        else:
            tier.flags = ['prospect']
        tier.save()


class Migration(migrations.Migration):

    dependencies = [
        ("tiers", "0003_alter_adresse_code_postal_alter_adresse_libelle_and_more"),
    ]

    operations = [
        # Étape 1: Ajouter le nouveau champ relation
        migrations.AddField(
            model_name='tiers',
            name='relation',
            field=models.CharField(
                choices=[
                    ('client', 'Client'),
                    ('prospect', 'Prospect'),
                    ('fournisseur', 'Fournisseur'),
                    ('sous_traitant', 'Sous-traitant')
                ],
                default='prospect',
                max_length=20,
                verbose_name='Relation'
            ),
        ),
        
        # Étape 2: Migrer les données existantes
        migrations.RunPython(migrate_flags_to_relation, reverse_migration),
        
        # Étape 3: Ajouter l'index sur le nouveau champ
        migrations.AddIndex(
            model_name='tiers',
            index=models.Index(fields=['relation'], name='tiers_relation_idx'),
        ),
    ]
